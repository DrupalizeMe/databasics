<?php

/**
 * @file
 * Databasics module.
 */

/**
 * Implements hook_node_view().
 */
function databasics_node_view($node, $view_mode = 'full') {
  if ($view_mode == 'full') {
    global $user;

    // Load up the current count.
    $view_count = databasics_get_count($node->nid, $user->uid) + 1;

    // Increment the current count.
    databasics_set_count($view_count, $node->nid, $user->uid);

    // Add the view count information to the node content.
    $node->content['node_views'] = array(
      '#value' => t('You have viewed this page %num times', array('%num' => $view_count)),
      '#weight' => 10,
    );
  }
}

/**
 * Get a view count for a node.
 *
 * @param int $nid
 *   The node id.
 * @param int $uid
 *   The user id.
 * @return int
 *   The number of times this node has been viewed by this user.
 */
function databasics_get_count($nid, $uid) {
  $query = db_select('databasics', 'd')
    ->fields('d', array('view_count'))
    ->condition('d.nid', $nid)
    ->condition('d.uid', $uid);

  return (int) $query->execute()->fetchField();
}

/**
 * Set a view count for a node.
 *
 * @param int $view_count
 *   The number of times this node has been viewed by this user.
 * @param int $nid
 *   The node id.
 * @param int $uid
 *   The user id.
 */
function databasics_set_count($view_count, $nid, $uid) {
  // Try to update an existing row.
  db_update('databasics')
    ->fields(array('view_count' => $view_count))
    ->condition('nid', $nid)
    ->condition('uid', $uid)
    ->execute();

  // If no rows were updated, a row doesn't exist yet for this user.
  if (db_affected_rows() == 0) {
    $fields = array(
      'nid' => $nid,
      'uid' => $uid,
      'view_count' => $view_count,
    );
    db_insert('databasics')
      ->fields($fields)
      ->execute();
  }
}
